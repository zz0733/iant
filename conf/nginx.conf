
#user  nobody;
worker_processes  2;

error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
error_log  logs/crit.log  crit;

pid        logs/nginx.pid;


events {
    worker_connections  1024;
    multi_accept on;
    #use epoll;
}

env NGX_ROOT_PATH;
env NGX_TEMPLATE_PATH;
env NGX_ASSETS_PATH;
env AUTH_WX_MSG_AESKEY;
env AUTH_WX_MSG_AESKEY_LAST;
env AUTH_WX_MSG_APPID;
env AUTH_WX_MSG_TOKEN;
env SNAP_ENV;
env IMG_DIR;
env CDN_URI;
env HTTPS_DIR;
env SSL_CERT;
env SSL_CERT_KEY;
env SSDB_HOST;
env SSDB_PORT;

http {
    include deny_ips.conf;
    
    include       mime.types;
    default_type text/html;
    charset UTF-8;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #配置共享会话缓存大小，视站点访问情况设定
    ssl_session_cache   shared:SSL:5m;
    #配置会话超时时间
    ssl_session_timeout 10m;

    client_max_body_size 100m;

    gzip  on;

    lua_package_path '/usr/local/share/lua/5.1/?.lua;/opt/openresty/?.lua;$prefix/lua/?.lua;;';
    lua_package_cpath '/usr/local/lib/lua/5.1/?.so;;';
    # 对于开发研究，可以对代码 cache 进行关闭，这样不必每次都重新加载 nginx。
    lua_code_cache off;

    lua_shared_dict shared_dict 10m;
    lua_shared_dict wx_msg_dict 1m;

    init_worker_by_lua_file lua/timer/timer_boot.lua;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }
    server {
        listen 443 ssl http2 default_server;
        #listen [::]:443;
        server_name  www.lezomao.com lezomao.com;

        #charset koi8-r;
        access_log  logs/www.lezomao.com.access.log  main;

        resolver 8.8.8.8;

        set_by_lua $NGX_ROOT_PATH 'return os.getenv("NGX_ROOT_PATH")';
        set_by_lua $template_root 'return os.getenv("NGX_TEMPLATE_PATH")';
        set_by_lua $NGX_ASSETS_PATH 'return os.getenv("NGX_ASSETS_PATH")';
        set_by_lua $IMG_DIR 'return os.getenv("IMG_DIR")';
        set_by_lua $SSL_CERT 'return os.getenv("SSL_CERT")';
        set_by_lua $SSL_CERT_KEY 'return os.getenv("SSL_CERT_KEY")';

        root  $NGX_ROOT_PATH;

        ssl on;
        ssl_certificate      /etc/letsencrypt/live/lezomao.com/fullchain.pem;
        ssl_certificate_key  /etc/letsencrypt/live/lezomao.com/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/lezomao.com/chain.pem;

        #设置长连接
        keepalive_timeout   70;
        #优先采取服务器算法
        ssl_prefer_server_ciphers on;
        #使用DH文件
        ssl_dhparam /etc/ssl/certs/dhparam.pem;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        #定义算法
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-CAMELLIA256-SHA:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-SEED-SHA:DHE-RSA-CAMELLIA128-SHA:HIGH:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS';
        #减少点击劫持
        add_header X-Frame-Options DENY;
        #禁止服务器自动解析资源类型
        add_header X-Content-Type-Options nosniff;
        #防XSS攻擊
        add_header X-Xss-Protection 1;
        #HSTS策略
        #add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always; 
 
        rewrite_by_lua_file  lua/rewrite/rewrite_by_ua.lua;

        #location /ngx_status {
            #开启统计curl
        #    stub_status on;
        #    access_log off;
        #    allow 127.0.0.1;
        #    deny all;
        #}

        #location /wss {
        #        proxy_pass http://ws.lezomao.com:56889/;
        #        proxy_http_version 1.1;
        #        proxy_connect_timeout 4s; 
        #        proxy_read_timeout 120s; 
        #        proxy_send_timeout 10s; 
        #        proxy_set_header Upgrade $http_upgrade;
        #        proxy_set_header Connection $connection_upgrade;
        #}

        location ~ ^/api/movie/([_a-zA-Z0-9]+).upload {
            #set $method $1;
            #access_by_lua_file  lua/access/access_boot.lua;
            #content_by_lua_file  lua/movie/api/upload/$method.lua;
            proxy_pass               http://backend;
            proxy_request_buffering  off;
            proxy_set_header Host   $host;
            proxy_set_header         X-Real-IP $remote_addr;
            proxy_http_version       1.1;
            proxy_set_header         Connection "";
        }

        location ~ ^/app/([-_a-zA-Z0-9/]+) {
            set $path $1;
            content_by_lua_file lua/$path.lua;
        }

        

        location ~ ^/api/movie/([-_a-zA-Z0-9/]+).json {
            set $method $1;
            #access_by_lua_file  lua/access/access_boot.lua;
            content_by_lua_file  lua/movie/api/$method.lua;
        } 

        location ~ ^/api/([-_a-zA-Z0-9/]+).json {
            set $method $1;
            #access_by_lua_file  lua/access/access_boot.lua;
            content_by_lua_file  lua/api/$method.lua;
        }  

        location ~ ^/dao/([-_a-zA-Z0-9/]+).es {
            internal;
            set $method $1;
            content_by_lua_file  lua/dao/$method.lua;
        }

        location ~ ^/snap/([-_a-zA-Z0-9/]+) {
            set $method $1;
            content_by_lua_file  lua/app/snap_$method.lua;
        }

        location ~ ^/local/([-_a-zA-Z0-9/]+) {
            set $method $1;
            access_by_lua_file   lua/local/access_local.lua;
            content_by_lua_file  lua/local/$method.lua;
        }

        location ~ ^/movie/cms/([-_a-zA-Z0-9/]+) {
            set $method $1;
            #access_by_lua_file   lua/access/access_cms.lua;
            content_by_lua_file  lua/movie/cms/$method.lua;
        }

        location ~ ^/m/movie/detail/([0-9]+) {
            content_by_lua_file  lua/movie/mobile/detail.lua;
        } 
        location ~ ^/m/movie/search.html {
            content_by_lua_file  lua/movie/mobile/search.lua;
        } 

        location ~ ^/m/movie/torrent/([a-z][0-9]+) {
            content_by_lua_file  lua/movie/torrent.lua;
        }  

        location ~ ^/m/movie/play/([a-z][0-9]+) {
            content_by_lua_file  lua/movie/play.lua;
        } 

        location ~ ^/m/movie/genre/([^/]+).html {
            content_by_lua_file  lua/movie/mobile/genre.lua;
        } 

        location ~ ^/movie/detail/([0-9]+) {
            content_by_lua_file  lua/movie/detail.lua;
        } 

        location ~ ^/movie/search.html {
            content_by_lua_file  lua/movie/search.lua;
        } 
        location ~ ^/movie/genre/([^/]+).html {
            content_by_lua_file  lua/movie/genre.lua;
        }  
        location ~ ^/movie/region/([^/]+).html {
            content_by_lua_file  lua/movie/region.lua;
        }            

        location ~ ^/movie/jumper/([a-z][0-9]+) {
            content_by_lua_file  lua/movie/jumper.lua;
        }   

        location ~ ^/movie/torrent/([a-z][0-9]+) {
            content_by_lua_file  lua/movie/torrent.lua;
        }   

        location ~ ^/movie/play/([a-z][0-9]+) {
            content_by_lua_file  lua/movie/play.lua;
        } 

        location /auth/wx/msgcb {
            access_by_lua_file   lua/weixin/access_by_wx.lua;
            content_by_lua_file  lua/weixin/msgcb.lua;
        } 


        location /m/ {
            content_by_lua_file  lua/movie/mobile/home.lua;
        }  
        location /movie/ {
            content_by_lua_file  lua/movie/home.lua;
        } 

        location /assets {
           alias $NGX_ASSETS_PATH;
        }

        location ~ ^/img/([x0-9]+)/([0-9a-zA-Z_.]+\.(jpg|jpeg|png|webp))$ {
              alias $IMG_DIR/$1/$2;
        } 

        location ~ ^/img/([0-9a-zA-Z_.]+\.(jpg|jpeg|png|webp))$ {
              alias $IMG_DIR/origin/$1;
        }

        location /test {
            #internal;
            access_by_lua_file   lua/local/access_local.lua;
            content_by_lua_file  lua/t/test_boot.lua;
        }

        location /manager/html {
              rewrite ^/manager/html$ / permanent; 
        }

        location ~ /[0-9a-zA-Z_.-]+\.(txt|html|xml|ico) {
              root $NGX_ROOT_PATH;
        } 

        #字体文件存在跨域问题
        location ~ .*\.(ttf|woff)(.*?) {
            add_header Access-Control-Allow-Origin *;
        }

        location ~ /([0-9a-zA-Z_.]+\.gz)$ {
              root $NGX_ROOT_PATH;
              add_header Content-Disposition 'attachment; filename="$1"';
        } 

        location ~ /sitemap.xml {
              content_by_lua_file  lua/movie/sitemap.lua;
        }

        location / {
             include deny_agent.conf;
             access_by_lua_file  lua/access/access_boot.lua;
             #proxy_pass http://localhost:8080;
             content_by_lua_file  lua/movie/home.lua;
        } 

      
        # redirect server error pages to the static page /50x.html
        error_page   404  /error/404;
        error_page   500 502 503 504  /error/50x;
       
        location ~ ^/error/([0-9x]+) {
            set $method $1;
            content_by_lua_file  lua/movie/error/$method.lua;
        }


        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    server {
        listen       80;
        server_name  www.lezomao.com lezomao.com;

        set_by_lua $HTTPS_DIR 'return os.getenv("HTTPS_DIR")';
        set_by_lua $NGX_ROOT_PATH 'return os.getenv("NGX_ROOT_PATH")';
        root  $NGX_ROOT_PATH;
        
        location ~ /[0-9a-zA-Z_.-]+\.(txt|html|xml|ico)$ {
              root $NGX_ROOT_PATH;
        } 

        location ^~ /.well-known/acme-challenge/ {
            default_type "text/plain";
            root $HTTPS_DIR;
        }


        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen       8088;
        # resty.upload暂不支持http2
        location ~ ^/api/movie/([_a-zA-Z0-9]+).upload {
            set $method $1;
            #access_by_lua_file  lua/access/access_boot.lua;
            content_by_lua_file  lua/movie/api/upload/$method.lua;
        }
    }

    upstream backend {
        server localhost:8088;
        keepalive 128;
    }

}
