
#user  nobody;
worker_processes  2;

error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid        logs/nginx.pid;


events {
    worker_connections  1024;
    multi_accept on;
    #use epoll;
}

env NGX_ROOT_PATH;
env NGX_TEMPLATE_PATH;
env NGX_ASSETS_PATH;
env AUTH_WX_MSG_AESKEY;
env AUTH_WX_MSG_AESKEY_LAST;
env AUTH_WX_MSG_APPID;
env AUTH_WX_MSG_TOKEN;
env SNAP_ENV;
env IMG_DIR;
env HTTPS_DIR;
env SSL_CERT;
env SSL_CERT_KEY;

http {
    include deny_ips.conf;
    
    include       mime.types;
    default_type text/html;
    charset UTF-8;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on;

    lua_package_path '/usr/local/share/lua/5.1/?.lua;/opt/openresty/lualib/?.lua;$prefix/lua/?.lua;';
    # 对于开发研究，可以对代码 cache 进行关闭，这样不必每次都重新加载 nginx。
    lua_code_cache off;

    lua_shared_dict shared_dict 10m;

    init_worker_by_lua_file lua/timer/timer_boot.lua;



    server {
        listen 443;
        #listen [::]:443;
        server_name  www.lezomao.com lezomao.com;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;
        

        access_log  logs/www.lezomao.com.access.log  main;

        resolver 8.8.8.8;

        set_by_lua $NGX_ROOT_PATH 'return os.getenv("NGX_ROOT_PATH")';
        set_by_lua $template_root 'return os.getenv("NGX_TEMPLATE_PATH")';
        set_by_lua $NGX_ASSETS_PATH 'return os.getenv("NGX_ASSETS_PATH")';
        set_by_lua $IMG_DIR 'return os.getenv("IMG_DIR")';
        set_by_lua $SSL_CERT 'return os.getenv("SSL_CERT")';
        set_by_lua $SSL_CERT_KEY 'return os.getenv("SSL_CERT_KEY")';

        root  $NGX_ROOT_PATH;

        ssl on;
        ssl_certificate      /etc/letsencrypt/live/lezomao.com/fullchain.pem;
        ssl_certificate_key  /etc/letsencrypt/live/lezomao.com/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/lezomao.com/chain.pem;

         ssl_session_timeout 5m;
        # omit SSLv3 because of POODLE (CVE-2014-3566)
        ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
        ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
        ssl_prefer_server_ciphers on;
 
        rewrite_by_lua_file  lua/rewrite/rewrite_by_ua.lua;

        location ~ ^/app/([-_a-zA-Z0-9/]+) {
            set $path $1;
            content_by_lua_file lua/$path.lua;
        }

        location ~ ^/api/movie/([-_a-zA-Z0-9/]+).json {
            set $method $1;
            #access_by_lua_file  lua/access/access_boot.lua;
            content_by_lua_file  lua/movie/api/$method.lua;
        } 

        location ~ ^/api/([-_a-zA-Z0-9/]+).json {
            set $method $1;
            #access_by_lua_file  lua/access/access_boot.lua;
            content_by_lua_file  lua/api/$method.lua;
        }  

        location ~ ^/dao/([-_a-zA-Z0-9/]+).es {
            internal;
            set $method $1;
            content_by_lua_file  lua/dao/$method.lua;
        }

        location ~ ^/snap/([-_a-zA-Z0-9/]+) {
            set $method $1;
            content_by_lua_file  lua/app/snap_$method.lua;
        }

        location ~ ^/local/([-_a-zA-Z0-9/]+) {
            set $method $1;
            access_by_lua_file   lua/local/access_local.lua;
            content_by_lua_file  lua/local/$method.lua;
        }

        location ~ ^/m/movie/detail/([0-9]+) {
            content_by_lua_file  lua/movie/mobile/detail.lua;
        } 
        location ~ ^/m/movie/search.html {
            content_by_lua_file  lua/movie/mobile/search.lua;
        } 

       location ~ ^/m/movie/genre/([^/]+).html {
            content_by_lua_file  lua/movie/mobile/genre.lua;
        } 

        location ~ ^/movie/detail/([0-9]+) {
            content_by_lua_file  lua/movie/detail.lua;
        } 

        location ~ ^/movie/search.html {
            content_by_lua_file  lua/movie/search.lua;
        } 
        location ~ ^/movie/genre/([^/]+).html {
            content_by_lua_file  lua/movie/genre.lua;
        }  
        location ~ ^/movie/region/([^/]+).html {
            content_by_lua_file  lua/movie/region.lua;
        }            

        location ~ ^/movie/jumper/([a-z][0-9]+) {
            content_by_lua_file  lua/movie/jumper.lua;
        }   

        location /auth/wx/msgcb {
            access_by_lua_file   lua/weixin/access_by_wx.lua;
            content_by_lua_file  lua/weixin/msgcb.lua;
        } 


        location /m/ {
            content_by_lua_file  lua/movie/mobile/home.lua;
        }  
        location /movie/ {
            content_by_lua_file  lua/movie/home.lua;
        } 

        location /assets {
           alias $NGX_ASSETS_PATH;
        }

        location ~ ^/img/([x0-9]+)/([0-9a-zA-Z_.]+\.(jpg|png|webp))$ {
              alias $IMG_DIR/$1/$2;
        } 

        location ~ ^/img/([0-9a-zA-Z_.]+\.(jpg|png|webp))$ {
              alias $IMG_DIR/origin/$1;
        }

        location /test {
            #internal;
            access_by_lua_file   lua/local/access_local.lua;
            content_by_lua_file  lua/t/test_boot.lua;
        }

        location /manager/html {
              rewrite ^/manager/html$ / permanent; 
        }

        location ~ /[0-9a-zA-Z_.]+\.(txt|html|xml)$ {
              root $NGX_ROOT_PATH;
        } 

        location ~ /([0-9a-zA-Z_.]+\.gz)$ {
              root $NGX_ROOT_PATH;
              add_header Content-Disposition 'attachment; filename="$1"';
        } 

        location ~ /sitemap.xml {
              content_by_lua_file  lua/movie/sitemap.lua;
        }

        location / {
             include deny_agent.conf;
             access_by_lua_file  lua/access/access_boot.lua;
             #proxy_pass http://localhost:8080;
             content_by_lua_file  lua/movie/home.lua;
        } 

      

       

        #error_page  404              http://localhost:8080/;


        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    server {
        listen       80;
        server_name  www.lezomao.com lezomao.com;

        set_by_lua $HTTPS_DIR 'return os.getenv("HTTPS_DIR")';

        location ~ ^/.well-known/acme-challenge/ {
            alias $HTTPS_DIR;
            try_files $uri = 404;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

}
